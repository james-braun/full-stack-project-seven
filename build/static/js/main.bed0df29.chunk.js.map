{"version":3,"sources":["components/Form.js","components/Nav.js","components/Header.js","components/GalleryItem.js","components/NoResults.js","components/Gallery.js","components/config.js","components/Items.js","components/Error.js","components/App.js","serviceWorker.js","index.js"],"names":["Form","props","searchInput","React","createRef","react_default","a","createElement","className","onSubmit","e","preventDefault","search","value","currentTarget","reset","type","name","placeholder","ref","input","required","fill","height","viewBox","width","xmlns","d","Nav","react_router_dom","to","Header","components_Form","tag","expression","replace","history","push","concat","components_Nav","GalleryItem","src","farmId","serverId","id","secret","alt","NoResults","Gallery","pictures","response","results","data","photos","photo","length","map","picture","components_GalleryItem","key","farm","server","components_NoResults","apiKey","Items","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","performSearch","myhttp","axios","then","setState","resp","prevUrl","match","url","catch","error","console","log","state","params","class","components_Gallery","PureComponent","Error","App","react_router","component","exact","path","render","Boolean","window","location","hostname","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bed0df29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n\r\n    var searchInput = React.createRef();\r\n\r\n    // this function controls the handling of input.\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // this function calls getSearch() in\r\n        // Header to put the input in the address bar\r\n        // because Header has a reference to history\r\n        // Form does not.\r\n        props.search(searchInput.value);\r\n        e.currentTarget.reset();\r\n    }\r\n    return (\r\n        <form className=\"search-form\" onSubmit={handleSubmit}>\r\n            <input type=\"search\" name=\"search\" placeholder=\"Search\" ref={(input) => searchInput = input} required />\r\n            <button type=\"submit\" className=\"search-button\">\r\n                <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                </svg>\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className=\"main-nav\">            \r\n            <ul>\r\n                <li><NavLink to='/full-stack-project-seven/cats'>Cats</NavLink></li>\r\n                <li><NavLink to='/full-stack-project-seven/dogs'>Dogs</NavLink></li>\r\n                <li><NavLink to='/full-stack-project-seven/computers'>Computers</NavLink></li>\r\n            </ul> \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport Form from './Form';\r\nimport Nav from './Nav';\r\n\r\nconst Header = (props) => {\r\n\r\n    // this function pushes the input from the form \r\n    // element on to the address bar so it can be used\r\n    // by Route.\r\n    const getSearch = (tag) => {\r\n\r\n        // if the input starts with an \"/\" or white space or multiple\r\n        // \"/\"'s push a 404 error route addess to the address bar\r\n        // rather than have the app crash.\r\n        var expression = /^\\/+/;\r\n        tag = tag.replace(expression, \"Error/404\");\r\n        expression = /^\\s+/;\r\n        tag = tag.replace(expression, \"Error/404\");\r\n\r\n        // push input route to the address bar.\r\n        props.history.push(`/full-stack-project-seven/${tag}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form search={getSearch} />\r\n            <Nav />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst GalleryItem = (props) => {\r\n    var src = `https://farm${props.farmId}.staticflickr.com/${props.serverId}/${props.id}_${props.secret}.jpg`\r\n    return (\r\n        <li>\r\n            <img src={src} alt=\"\" />\r\n        </li>\r\n    );   \r\n}\r\n   \r\nexport default GalleryItem;","import React from 'react';\r\n\r\nconst NoResults = () => {\r\n    return (\r\n        <ul>\r\n            <li className=\"not-found\">\r\n                <h3>No Results Found</h3>\r\n                <p>Your search did not return any results. Please try again.</p>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NoResults;","import React from 'react';\r\nimport GalleryItem from './GalleryItem';\r\nimport NoResults from './NoResults'\r\n\r\nconst Gallery = (props) => {\r\n    let pictures;\r\n    if (props.response) {\r\n        const results = props.response.data.photos.photo;\r\n        if (results.length > 0) {\r\n            pictures = results.map(picture =>\r\n                <GalleryItem key={picture.id} farmId={picture.farm} serverId={picture.server} id={picture.id} secret={picture.secret} />\r\n            );\r\n\r\n            return (\r\n                <div className=\"photo-container\">\r\n                    <h2>{props.name}</h2>\r\n                    <ul>\r\n                        {pictures}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    return <NoResults />;\r\n}\r\n\r\nexport default Gallery;","const apiKey = '5a850b1c0c64a511e43dfb319fc41b55';\r\nexport default apiKey;","import React, { PureComponent } from 'react';\r\nimport Gallery from './Gallery';\r\nimport axios from 'axios';\r\nimport apiKey from './config.js';\r\n\r\n\r\nclass Items extends PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            resp: null,   // holds the data from the axios fetch.\r\n            prevUrl: null // Holds the previously visited url.\r\n        };\r\n    }\r\n\r\n    performSearch = (search) => {\r\n        // fetch data from API\r\n        var myhttp = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&per_page=24&format=json&nojsoncallback=1&text=${search}`;\r\n        axios(myhttp)\r\n            .then(response => {\r\n                this.setState({\r\n                    resp: response,  // set to data response.\r\n                    prevUrl: this.props.match.url // set to current url.\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and Parsing data ', error);\r\n            });\r\n    }\r\n    render() {\r\n        // if the previously rendered url is not the current url being \r\n        // rendered then preform a search and display \"loading...\" and update\r\n        // the 'prevUrl' in the search function. otherwise display results.\r\n        if (this.state.prevUrl !== this.props.match.url) {\r\n            this.performSearch(this.props.match.params.name);\r\n            return (\r\n                <div className=\"photo-container\">\r\n                    <h2>loading...</h2>\r\n                    {/*sk-fading-circle curtesy https://tobiasahlin.com/spinkit/ */}\r\n                    <div class=\"sk-fading-circle\">\r\n                        <div class=\"sk-circle1 sk-circle\"></div>\r\n                        <div class=\"sk-circle2 sk-circle\"></div>\r\n                        <div class=\"sk-circle3 sk-circle\"></div>\r\n                        <div class=\"sk-circle4 sk-circle\"></div>\r\n                        <div class=\"sk-circle5 sk-circle\"></div>\r\n                        <div class=\"sk-circle6 sk-circle\"></div>\r\n                        <div class=\"sk-circle7 sk-circle\"></div>\r\n                        <div class=\"sk-circle8 sk-circle\"></div>\r\n                        <div class=\"sk-circle9 sk-circle\"></div>\r\n                        <div class=\"sk-circle10 sk-circle\"></div>\r\n                        <div class=\"sk-circle11 sk-circle\"></div>\r\n                        <div class=\"sk-circle12 sk-circle\"></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <Gallery name={this.props.match.params.name} response={this.state.resp} />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Items;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li className=\"not-found\">\r\n                    <h3>404 error</h3>\r\n                    <p>Your page could not be found. Please try again.</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Items from './Items';\r\nimport Error from './Error';\r\n\r\n\r\nconst App = () => {\r\n    \r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"container\">\r\n                <Route component={Header} />\r\n                <Route exact path=\"/\" render={() => <Redirect to=\"/full-stack-project-seven/cats\" />} />\r\n                <Route exact path=\"/full-stack-project-seven/\" render={() => <Redirect to=\"/full-stack-project-seven/cats\" />} />\r\n                <Switch>\r\n                    <Route exact path=\"/full-stack-project-seven/:name\" component={Items} />\r\n                    <Route component={Error} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n            \r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport './css/index.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}